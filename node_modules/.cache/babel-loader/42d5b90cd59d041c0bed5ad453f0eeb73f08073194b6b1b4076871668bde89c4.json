{"ast":null,"code":"var _jsxFileName = \"/Users/shashankkote/Desktop2/Working/src/Player/PaymentProcessing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PaymentProcessing.css'; // Import the stylesheet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentProcessing = () => {\n  _s();\n  const [cardNumber, setCardNumber] = useState('');\n  const [expiryDate, setExpiryDate] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [upiId, setUpiId] = useState('');\n  const [transactionStatus, setTransactionStatus] = useState('');\n  const [paymentMethod, setPaymentMethod] = useState('card');\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\n  const [amount, setAmount] = useState(5000); // Default amount (5000)\n  const [transactionHistory, setTransactionHistory] = useState([]);\n  const [userData, setUserData] = useState({\n    username: 'John Doe',\n    // Example username\n    email: 'johndoe@gmail.com',\n    // Example email\n    paymentStatus: 'Not Paid' // Payment status\n  });\n\n  // Load transaction history from localStorage on component mount\n  useEffect(() => {\n    const savedHistory = localStorage.getItem('transactionHistory');\n    if (savedHistory) {\n      setTransactionHistory(JSON.parse(savedHistory));\n    }\n  }, []);\n\n  // Handle amount selection\n  const handleAmountChange = e => {\n    setAmount(Number(e.target.value));\n  };\n\n  // Handle Card Number Change\n  const handleCardNumberChange = e => {\n    let value = e.target.value;\n    value = value.replace(/\\D/g, '').replace(/(\\d{4})(?=\\d)/g, '$1 '); // Add space after every 4 digits\n    setCardNumber(value);\n  };\n\n  // Handle Expiry Date Change\n  const handleExpiryDateChange = e => {\n    let value = e.target.value;\n    value = value.replace(/[^0-9/]/g, ''); // Allow only numbers and a single slash\n    if (value.indexOf('/') !== -1) {\n      const parts = value.split('/');\n      if (parts.length > 2) {\n        value = parts[0] + '/' + parts[1].slice(0, 2); // Keep only two digits for year\n      }\n    }\n    if (value.length <= 2) {\n      value = value.replace(/(\\d{2})(\\d{0,2})/, '$1/$2');\n    }\n    setExpiryDate(value);\n  };\n\n  // Handle CVV Change\n  const handleCvvChange = e => {\n    let value = e.target.value;\n    value = value.replace(/\\D/g, '').slice(0, 3);\n    setCvv(value);\n  };\n\n  // Handle UPI ID Change\n  const handleUpiIdChange = e => {\n    let value = e.target.value;\n    setUpiId(value);\n  };\n\n  // Validate UPI ID format\n  const validateUpiId = upiId => {\n    const upiRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+$/; // Regex for valid UPI ID format\n    return upiRegex.test(upiId);\n  };\n\n  // Handle Form Submission\n  const handleSubmit = () => {\n    if (paymentMethod === 'card') {\n      if (cardNumber.length !== 19) {\n        setTransactionStatus('Failure: Invalid Card Number');\n        return;\n      }\n      if (expiryDate.length !== 5 || !expiryDate.includes('/')) {\n        setTransactionStatus('Failure: Invalid Expiry Date');\n        return;\n      }\n      if (cvv.length !== 3) {\n        setTransactionStatus('Failure: Invalid CVV');\n        return;\n      }\n    } else if (paymentMethod === 'upi') {\n      if (!validateUpiId(upiId)) {\n        setTransactionStatus('Failure: Invalid UPI ID');\n        return;\n      }\n    }\n    const transactionDetails = {\n      transactionId: `TXN${Math.floor(Math.random() * 1000000)}`,\n      amountPaid: amount,\n      paymentMethod,\n      date: new Date().toLocaleString()\n    };\n    setTransactionStatus('Success: Transaction Successful!');\n    alert('Transaction Successful!');\n\n    // Update payment success status and user data\n    setPaymentSuccess(true);\n    setUserData(prevData => ({\n      ...prevData,\n      paymentStatus: 'Paid'\n    }));\n\n    // Add the transaction to history\n    const updatedHistory = [...transactionHistory, transactionDetails];\n    setTransactionHistory(updatedHistory);\n\n    // Save the updated history to localStorage\n    localStorage.setItem('transactionHistory', JSON.stringify(updatedHistory));\n  };\n\n  // Handle Payment Method Change\n  const handlePaymentMethodChange = e => {\n    setPaymentMethod(e.target.value);\n  };\n\n  // Display Transaction History\n  const handleHistoryClick = () => {\n    if (transactionHistory.length === 0) {\n      alert('No transactions yet!');\n      return;\n    }\n    let historyDetails = 'Transaction History:\\n';\n    transactionHistory.forEach((transaction, index) => {\n      historyDetails += `\n        Transaction ${index + 1}:\n        ID: ${transaction.transactionId}\n        Amount Paid: $${transaction.amountPaid}\n        Payment Method: ${transaction.paymentMethod}\n        Date: ${transaction.date}\\n`;\n    });\n    alert(historyDetails);\n  };\n\n  // Clear Transaction History\n  const handleClearHistory = () => {\n    setTransactionHistory([]);\n    localStorage.removeItem('transactionHistory');\n    alert('Transaction history has been cleared.');\n  };\n\n  // Handle Invoice Generation\n  const handleGenerateInvoice = () => {\n    const invoiceDetails = `\n      Invoice:\n      Name: ${userData.username}\n      Email: ${userData.email}\n      Payment Status: ${userData.paymentStatus}\n      Amount Paid: $${amount}\n      Membership: ${amount === 5000 ? 'Silver' : amount === 10000 ? 'Gold' : 'Platinum'}\n      Transaction ID: TXN${Math.floor(Math.random() * 1000000)}\n      Date: ${new Date().toLocaleString()}\n    `;\n    const invoiceWindow = window.open();\n    invoiceWindow.document.write('<pre>' + invoiceDetails + '</pre>');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-processing\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Processing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"paymentMethod\",\n          value: \"card\",\n          checked: paymentMethod === 'card',\n          onChange: handlePaymentMethodChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), \"Card Payment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"paymentMethod\",\n          value: \"upi\",\n          checked: paymentMethod === 'upi',\n          onChange: handlePaymentMethodChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), \"UPI Payment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"amount\",\n          value: 5000,\n          checked: amount === 5000,\n          onChange: handleAmountChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), \"Silver - $5000\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"amount\",\n          value: 10000,\n          checked: amount === 10000,\n          onChange: handleAmountChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), \"Gold - $10000\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"amount\",\n          value: 15000,\n          checked: amount === 15000,\n          onChange: handleAmountChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), \"Platinum - $15000\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), paymentMethod === 'card' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-payment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Card Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"19\" // Allow 16 digits + 3 spaces\n          ,\n          value: cardNumber,\n          onChange: handleCardNumberChange,\n          placeholder: \"1234 5678 1234 5678\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Expiry Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"5\" // Format: MM/YY\n          ,\n          value: expiryDate,\n          onChange: handleExpiryDateChange,\n          placeholder: \"MM/YY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CVV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"3\",\n          value: cvv,\n          onChange: handleCvvChange,\n          placeholder: \"CVV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), paymentMethod === 'upi' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upi-payment-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter UPI ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: upiId,\n          onChange: handleUpiIdChange,\n          placeholder: \"you@upi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: transactionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateInvoice,\n      children: \"Generate Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleHistoryClick,\n      children: \"View Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearHistory,\n      children: \"Clear History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentProcessing, \"F6LzIAgll54BZ+SoRTvgsb/vsoM=\");\n_c = PaymentProcessing;\nexport default PaymentProcessing;\nvar _c;\n$RefreshReg$(_c, \"PaymentProcessing\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PaymentProcessing","_s","cardNumber","setCardNumber","expiryDate","setExpiryDate","cvv","setCvv","upiId","setUpiId","transactionStatus","setTransactionStatus","paymentMethod","setPaymentMethod","paymentSuccess","setPaymentSuccess","amount","setAmount","transactionHistory","setTransactionHistory","userData","setUserData","username","email","paymentStatus","savedHistory","localStorage","getItem","JSON","parse","handleAmountChange","e","Number","target","value","handleCardNumberChange","replace","handleExpiryDateChange","indexOf","parts","split","length","slice","handleCvvChange","handleUpiIdChange","validateUpiId","upiRegex","test","handleSubmit","includes","transactionDetails","transactionId","Math","floor","random","amountPaid","date","Date","toLocaleString","alert","prevData","updatedHistory","setItem","stringify","handlePaymentMethodChange","handleHistoryClick","historyDetails","forEach","transaction","index","handleClearHistory","removeItem","handleGenerateInvoice","invoiceDetails","invoiceWindow","window","open","document","write","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","checked","onChange","maxLength","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/shashankkote/Desktop2/Working/src/Player/PaymentProcessing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PaymentProcessing.css'; // Import the stylesheet\r\n\r\nconst PaymentProcessing = () => {\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [expiryDate, setExpiryDate] = useState('');\r\n  const [cvv, setCvv] = useState('');\r\n  const [upiId, setUpiId] = useState('');\r\n  const [transactionStatus, setTransactionStatus] = useState('');\r\n  const [paymentMethod, setPaymentMethod] = useState('card');\r\n  const [paymentSuccess, setPaymentSuccess] = useState(false);\r\n  const [amount, setAmount] = useState(5000); // Default amount (5000)\r\n  const [transactionHistory, setTransactionHistory] = useState([]);\r\n  const [userData, setUserData] = useState({\r\n    username: 'John Doe',  // Example username\r\n    email: 'johndoe@gmail.com', // Example email\r\n    paymentStatus: 'Not Paid',  // Payment status\r\n  });\r\n\r\n  // Load transaction history from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedHistory = localStorage.getItem('transactionHistory');\r\n    if (savedHistory) {\r\n      setTransactionHistory(JSON.parse(savedHistory));\r\n    }\r\n  }, []);\r\n\r\n  // Handle amount selection\r\n  const handleAmountChange = (e) => {\r\n    setAmount(Number(e.target.value));\r\n  };\r\n\r\n  // Handle Card Number Change\r\n  const handleCardNumberChange = (e) => {\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, '').replace(/(\\d{4})(?=\\d)/g, '$1 '); // Add space after every 4 digits\r\n    setCardNumber(value);\r\n  };\r\n\r\n  // Handle Expiry Date Change\r\n  const handleExpiryDateChange = (e) => {\r\n    let value = e.target.value;\r\n    value = value.replace(/[^0-9/]/g, ''); // Allow only numbers and a single slash\r\n    if (value.indexOf('/') !== -1) {\r\n      const parts = value.split('/');\r\n      if (parts.length > 2) {\r\n        value = parts[0] + '/' + parts[1].slice(0, 2); // Keep only two digits for year\r\n      }\r\n    }\r\n    if (value.length <= 2) {\r\n      value = value.replace(/(\\d{2})(\\d{0,2})/, '$1/$2');\r\n    }\r\n    setExpiryDate(value);\r\n  };\r\n\r\n  // Handle CVV Change\r\n  const handleCvvChange = (e) => {\r\n    let value = e.target.value;\r\n    value = value.replace(/\\D/g, '').slice(0, 3);\r\n    setCvv(value);\r\n  };\r\n\r\n  // Handle UPI ID Change\r\n  const handleUpiIdChange = (e) => {\r\n    let value = e.target.value;\r\n    setUpiId(value);\r\n  };\r\n\r\n  // Validate UPI ID format\r\n  const validateUpiId = (upiId) => {\r\n    const upiRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+$/; // Regex for valid UPI ID format\r\n    return upiRegex.test(upiId);\r\n  };\r\n\r\n  // Handle Form Submission\r\n  const handleSubmit = () => {\r\n    if (paymentMethod === 'card') {\r\n      if (cardNumber.length !== 19) {\r\n        setTransactionStatus('Failure: Invalid Card Number');\r\n        return;\r\n      }\r\n      if (expiryDate.length !== 5 || !expiryDate.includes('/')) {\r\n        setTransactionStatus('Failure: Invalid Expiry Date');\r\n        return;\r\n      }\r\n      if (cvv.length !== 3) {\r\n        setTransactionStatus('Failure: Invalid CVV');\r\n        return;\r\n      }\r\n    } else if (paymentMethod === 'upi') {\r\n      if (!validateUpiId(upiId)) {\r\n        setTransactionStatus('Failure: Invalid UPI ID');\r\n        return;\r\n      }\r\n    }\r\n\r\n    const transactionDetails = {\r\n      transactionId: `TXN${Math.floor(Math.random() * 1000000)}`,\r\n      amountPaid: amount,\r\n      paymentMethod,\r\n      date: new Date().toLocaleString(),\r\n    };\r\n\r\n    setTransactionStatus('Success: Transaction Successful!');\r\n    alert('Transaction Successful!');\r\n\r\n    // Update payment success status and user data\r\n    setPaymentSuccess(true);\r\n    setUserData((prevData) => ({\r\n      ...prevData,\r\n      paymentStatus: 'Paid',\r\n    }));\r\n\r\n    // Add the transaction to history\r\n    const updatedHistory = [...transactionHistory, transactionDetails];\r\n    setTransactionHistory(updatedHistory);\r\n\r\n    // Save the updated history to localStorage\r\n    localStorage.setItem('transactionHistory', JSON.stringify(updatedHistory));\r\n  };\r\n\r\n  // Handle Payment Method Change\r\n  const handlePaymentMethodChange = (e) => {\r\n    setPaymentMethod(e.target.value);\r\n  };\r\n\r\n  // Display Transaction History\r\n  const handleHistoryClick = () => {\r\n    if (transactionHistory.length === 0) {\r\n      alert('No transactions yet!');\r\n      return;\r\n    }\r\n\r\n    let historyDetails = 'Transaction History:\\n';\r\n    transactionHistory.forEach((transaction, index) => {\r\n      historyDetails += `\r\n        Transaction ${index + 1}:\r\n        ID: ${transaction.transactionId}\r\n        Amount Paid: $${transaction.amountPaid}\r\n        Payment Method: ${transaction.paymentMethod}\r\n        Date: ${transaction.date}\\n`;\r\n    });\r\n\r\n    alert(historyDetails);\r\n  };\r\n\r\n  // Clear Transaction History\r\n  const handleClearHistory = () => {\r\n    setTransactionHistory([]);\r\n    localStorage.removeItem('transactionHistory');\r\n    alert('Transaction history has been cleared.');\r\n  };\r\n\r\n  // Handle Invoice Generation\r\n  const handleGenerateInvoice = () => {\r\n    const invoiceDetails = `\r\n      Invoice:\r\n      Name: ${userData.username}\r\n      Email: ${userData.email}\r\n      Payment Status: ${userData.paymentStatus}\r\n      Amount Paid: $${amount}\r\n      Membership: ${amount === 5000 ? 'Silver' : amount === 10000 ? 'Gold' : 'Platinum'}\r\n      Transaction ID: TXN${Math.floor(Math.random() * 1000000)}\r\n      Date: ${new Date().toLocaleString()}\r\n    `;\r\n    const invoiceWindow = window.open();\r\n    invoiceWindow.document.write('<pre>' + invoiceDetails + '</pre>');\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-processing\">\r\n      <h2>Payment Processing</h2>\r\n\r\n      {/* Payment Method Selection */}\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"paymentMethod\"\r\n            value=\"card\"\r\n            checked={paymentMethod === 'card'}\r\n            onChange={handlePaymentMethodChange}\r\n          />\r\n          Card Payment\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"paymentMethod\"\r\n            value=\"upi\"\r\n            checked={paymentMethod === 'upi'}\r\n            onChange={handlePaymentMethodChange}\r\n          />\r\n          UPI Payment\r\n        </label>\r\n      </div>\r\n\r\n      {/* Amount Selection */}\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"amount\"\r\n            value={5000}\r\n            checked={amount === 5000}\r\n            onChange={handleAmountChange}\r\n          />\r\n          Silver - $5000\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"amount\"\r\n            value={10000}\r\n            checked={amount === 10000}\r\n            onChange={handleAmountChange}\r\n          />\r\n          Gold - $10000\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"amount\"\r\n            value={15000}\r\n            checked={amount === 15000}\r\n            onChange={handleAmountChange}\r\n          />\r\n          Platinum - $15000\r\n        </label>\r\n      </div>\r\n\r\n      {/* Card Payment Form */}\r\n      {paymentMethod === 'card' && (\r\n        <div className=\"card-payment-form\">\r\n          <div>\r\n            <label>Card Number</label>\r\n            <input\r\n              type=\"text\"\r\n              maxLength=\"19\" // Allow 16 digits + 3 spaces\r\n              value={cardNumber}\r\n              onChange={handleCardNumberChange}\r\n              placeholder=\"1234 5678 1234 5678\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Expiry Date</label>\r\n            <input\r\n              type=\"text\"\r\n              maxLength=\"5\" // Format: MM/YY\r\n              value={expiryDate}\r\n              onChange={handleExpiryDateChange}\r\n              placeholder=\"MM/YY\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>CVV</label>\r\n            <input\r\n              type=\"text\"\r\n              maxLength=\"3\"\r\n              value={cvv}\r\n              onChange={handleCvvChange}\r\n              placeholder=\"CVV\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* UPI Payment Form */}\r\n      {paymentMethod === 'upi' && (\r\n        <div className=\"upi-payment-form\">\r\n          <div>\r\n            <label>Enter UPI ID</label>\r\n            <input\r\n              type=\"text\"\r\n              value={upiId}\r\n              onChange={handleUpiIdChange}\r\n              placeholder=\"you@upi\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={handleSubmit}>Submit Payment</button>\r\n\r\n      {/* Transaction Status */}\r\n      <div>{transactionStatus}</div>\r\n\r\n      {/* Buttons */}\r\n      <button onClick={handleGenerateInvoice}>Generate Invoice</button>\r\n      <button onClick={handleHistoryClick}>View Transaction History</button>\r\n      <button onClick={handleClearHistory}>Clear History</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentProcessing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}