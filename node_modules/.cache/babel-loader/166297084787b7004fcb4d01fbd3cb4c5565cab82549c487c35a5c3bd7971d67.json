{"ast":null,"code":"var _jsxFileName = \"/Users/shashankkote/Desktop2/Working/src/Administrator/CreateTeamForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CreateTeamForm.css'; // Add your styles here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTeamForm = () => {\n  _s();\n  const [teamName, setTeamName] = useState('');\n  const [maxTeamSize, setMaxTeamSize] = useState('');\n  const [sportId, setSportId] = useState('');\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [playerList, setPlayerList] = useState([]);\n  const [sportList, setSportList] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Fetch all players who are not assigned to a team\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/api/player/without-team');\n        const players = await response.json();\n        setPlayerList(players);\n      } catch (error) {\n        console.error(\"Error fetching players:\", error);\n      }\n    };\n    fetchPlayers();\n\n    // Fetch available sports for the dropdown\n    const fetchSports = async () => {\n      try {\n        const response = await fetch('http://localhost:5001/api/team/sports');\n        const sports = await response.json();\n        setSportList(sports);\n      } catch (error) {\n        console.error(\"Error fetching sports:\", error);\n      }\n    };\n    fetchSports();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!teamName || !maxTeamSize || !sportId || selectedPlayers.length === 0) {\n      setErrorMessage('Please fill in all fields.');\n      setSuccessMessage('');\n      return;\n    }\n    const teamData = {\n      Team_Name: teamName,\n      Max_Team_Size: maxTeamSize,\n      Sport_ID: sportId,\n      Player_Ids: selectedPlayers\n    };\n    try {\n      const response = await fetch('http://localhost:5001/api/team/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(teamData)\n      });\n      const result = await response.json();\n      if (response.status === 200) {\n        setSuccessMessage('Team created successfully! Team ID: ' + result.Team_ID);\n        setErrorMessage('');\n      } else {\n        setErrorMessage(result.error || 'Failed to create team');\n        setSuccessMessage('');\n      }\n    } catch (error) {\n      setErrorMessage('Error creating team. Please try again later.');\n      setSuccessMessage('');\n    }\n  };\n  const handlePlayerSelect = e => {\n    const selected = Array.from(e.target.selectedOptions, option => option.value);\n    setSelectedPlayers(selected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-team-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Team Name\",\n        value: teamName,\n        onChange: e => setTeamName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Max Team Size\",\n        value: maxTeamSize,\n        onChange: e => setMaxTeamSize(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sportId,\n        onChange: e => setSportId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Sport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), sportList.map(sport => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sport.Sport_ID,\n          children: sport.Sport_Name\n        }, sport.Sport_ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        value: selectedPlayers,\n        onChange: handlePlayerSelect,\n        children: playerList.map(player => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: player.Player_ID,\n          children: player.Player_Name\n        }, player.Player_ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 30\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateTeamForm, \"K+IYNUGzn04CUT+YyYGfUS8HgPQ=\");\n_c = CreateTeamForm;\nexport default CreateTeamForm;\nvar _c;\n$RefreshReg$(_c, \"CreateTeamForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CreateTeamForm","_s","teamName","setTeamName","maxTeamSize","setMaxTeamSize","sportId","setSportId","selectedPlayers","setSelectedPlayers","playerList","setPlayerList","sportList","setSportList","errorMessage","setErrorMessage","successMessage","setSuccessMessage","fetchPlayers","response","fetch","players","json","error","console","fetchSports","sports","handleSubmit","e","preventDefault","length","teamData","Team_Name","Max_Team_Size","Sport_ID","Player_Ids","method","headers","body","JSON","stringify","result","status","Team_ID","handlePlayerSelect","selected","Array","from","target","selectedOptions","option","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","map","sport","Sport_Name","multiple","player","Player_ID","Player_Name","_c","$RefreshReg$"],"sources":["/Users/shashankkote/Desktop2/Working/src/Administrator/CreateTeamForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './CreateTeamForm.css'; // Add your styles here\n\nconst CreateTeamForm = () => {\n    const [teamName, setTeamName] = useState('');\n    const [maxTeamSize, setMaxTeamSize] = useState('');\n    const [sportId, setSportId] = useState('');\n    const [selectedPlayers, setSelectedPlayers] = useState([]);\n    const [playerList, setPlayerList] = useState([]);\n    const [sportList, setSportList] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    // Fetch all players who are not assigned to a team\n    useEffect(() => {\n        const fetchPlayers = async () => {\n            try {\n                const response = await fetch('http://localhost:5001/api/player/without-team');\n                const players = await response.json();\n                setPlayerList(players);\n            } catch (error) {\n                console.error(\"Error fetching players:\", error);\n            }\n        };\n\n        fetchPlayers();\n\n        // Fetch available sports for the dropdown\n        const fetchSports = async () => {\n            try {\n                const response = await fetch('http://localhost:5001/api/team/sports');\n                const sports = await response.json();\n                setSportList(sports);\n            } catch (error) {\n                console.error(\"Error fetching sports:\", error);\n            }\n        };\n\n        fetchSports();\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!teamName || !maxTeamSize || !sportId || selectedPlayers.length === 0) {\n            setErrorMessage('Please fill in all fields.');\n            setSuccessMessage('');\n            return;\n        }\n\n        const teamData = {\n            Team_Name: teamName,\n            Max_Team_Size: maxTeamSize,\n            Sport_ID: sportId,\n            Player_Ids: selectedPlayers,\n        };\n\n        try {\n            const response = await fetch('http://localhost:5001/api/team/create', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(teamData),\n            });\n\n            const result = await response.json();\n\n            if (response.status === 200) {\n                setSuccessMessage('Team created successfully! Team ID: ' + result.Team_ID);\n                setErrorMessage('');\n            } else {\n                setErrorMessage(result.error || 'Failed to create team');\n                setSuccessMessage('');\n            }\n        } catch (error) {\n            setErrorMessage('Error creating team. Please try again later.');\n            setSuccessMessage('');\n        }\n    };\n\n    const handlePlayerSelect = (e) => {\n        const selected = Array.from(e.target.selectedOptions, option => option.value);\n        setSelectedPlayers(selected);\n    };\n\n    return (\n        <div className=\"create-team-form\">\n            <h2>Create Team</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Team Name\"\n                    value={teamName}\n                    onChange={(e) => setTeamName(e.target.value)}\n                />\n                <input\n                    type=\"number\"\n                    placeholder=\"Max Team Size\"\n                    value={maxTeamSize}\n                    onChange={(e) => setMaxTeamSize(e.target.value)}\n                />\n                <select value={sportId} onChange={(e) => setSportId(e.target.value)}>\n                    <option value=\"\">Select Sport</option>\n                    {sportList.map((sport) => (\n                        <option key={sport.Sport_ID} value={sport.Sport_ID}>\n                            {sport.Sport_Name}\n                        </option>\n                    ))}\n                </select>\n                <select multiple value={selectedPlayers} onChange={handlePlayerSelect}>\n                    {playerList.map((player) => (\n                        <option key={player.Player_ID} value={player.Player_ID}>\n                            {player.Player_Name}\n                        </option>\n                    ))}\n                </select>\n                <button type=\"submit\">Create Team</button>\n            </form>\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\n        </div>\n    );\n};\n\nexport default CreateTeamForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}