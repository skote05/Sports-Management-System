{"ast":null,"code":"var _jsxFileName = \"/Users/shashankkote/Downloads/Sports-Managment-System-master/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Register.css'; // Assuming you have your CSS for styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Validate password criteria: at least 8 characters, letters and numbers\n  const validatePassword = password => {\n    const passwordCriteria = /^(?=.*[a-zA-Z])(?=.*\\d).{8,}$/;\n    return passwordCriteria.test(password);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!username || !password || !confirmPassword || !email) {\n      setErrorMessage('Please fill in all fields.');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match.');\n      return;\n    }\n    if (!validatePassword(password)) {\n      setErrorMessage('Password must be at least 8 characters long and contain both letters and numbers.');\n      return;\n    }\n\n    // Prepare registration data\n    const registerData = {\n      username,\n      password,\n      email\n    };\n    try {\n      // Make a POST request to the backend for registration\n      const response = await fetch('http://localhost:5000/api/register', {\n        // Adjust the URL if needed\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(registerData)\n      });\n      const result = await response.json();\n      if (response.status === 201) {\n        // Registration successful\n        setSuccessMessage(result.message || 'Registration successful!');\n        setErrorMessage(''); // Clear any previous error\n      } else {\n        // Handle registration failure (e.g., username already exists)\n        setErrorMessage(result.message || 'Registration failed. Please try again.');\n        setSuccessMessage('');\n      }\n    } catch (error) {\n      setErrorMessage('Error during registration. Please try again later.');\n      setSuccessMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login_heading\",\n      children: \"Register Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email-id:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 38\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Register, \"04PU6vMsj0FYhBF25u4KE7bscs8=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","errorMessage","setErrorMessage","successMessage","setSuccessMessage","validatePassword","passwordCriteria","test","handleSubmit","e","preventDefault","registerData","response","fetch","method","headers","body","JSON","stringify","result","json","status","message","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/shashankkote/Downloads/Sports-Managment-System-master/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Register.css'; // Assuming you have your CSS for styling\r\n\r\nconst Register = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    // Validate password criteria: at least 8 characters, letters and numbers\r\n    const validatePassword = (password) => {\r\n        const passwordCriteria = /^(?=.*[a-zA-Z])(?=.*\\d).{8,}$/;\r\n        return passwordCriteria.test(password);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!username || !password || !confirmPassword || !email) {\r\n            setErrorMessage('Please fill in all fields.');\r\n            return;\r\n        }\r\n\r\n        if (password !== confirmPassword) {\r\n            setErrorMessage('Passwords do not match.');\r\n            return;\r\n        }\r\n\r\n        if (!validatePassword(password)) {\r\n            setErrorMessage('Password must be at least 8 characters long and contain both letters and numbers.');\r\n            return;\r\n        }\r\n\r\n        // Prepare registration data\r\n        const registerData = { username, password, email };\r\n\r\n        try {\r\n            // Make a POST request to the backend for registration\r\n            const response = await fetch('http://localhost:5000/api/register', {  // Adjust the URL if needed\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(registerData),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.status === 201) {\r\n                // Registration successful\r\n                setSuccessMessage(result.message || 'Registration successful!');\r\n                setErrorMessage(''); // Clear any previous error\r\n            } else {\r\n                // Handle registration failure (e.g., username already exists)\r\n                setErrorMessage(result.message || 'Registration failed. Please try again.');\r\n                setSuccessMessage('');\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage('Error during registration. Please try again later.');\r\n            setSuccessMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"login_heading\">Register Here</h1>\r\n            <div className=\"register-container\">\r\n                <form onSubmit={handleSubmit} className=\"register-form\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email-id:</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirmPassword\"\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n                    {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n                    {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMmB,gBAAgB,GAAIV,QAAQ,IAAK;IACnC,MAAMW,gBAAgB,GAAG,+BAA+B;IACxD,OAAOA,gBAAgB,CAACC,IAAI,CAACZ,QAAQ,CAAC;EAC1C,CAAC;EAED,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACjB,QAAQ,IAAI,CAACE,QAAQ,IAAI,CAACE,eAAe,IAAI,CAACE,KAAK,EAAE;MACtDG,eAAe,CAAC,4BAA4B,CAAC;MAC7C;IACJ;IAEA,IAAIP,QAAQ,KAAKE,eAAe,EAAE;MAC9BK,eAAe,CAAC,yBAAyB,CAAC;MAC1C;IACJ;IAEA,IAAI,CAACG,gBAAgB,CAACV,QAAQ,CAAC,EAAE;MAC7BO,eAAe,CAAC,mFAAmF,CAAC;MACpG;IACJ;;IAEA;IACA,MAAMS,YAAY,GAAG;MAAElB,QAAQ;MAAEE,QAAQ;MAAEI;IAAM,CAAC;IAElD,IAAI;MACA;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAAG;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,YAAY;MACrC,CAAC,CAAC;MAEF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAEpC,IAAIR,QAAQ,CAACS,MAAM,KAAK,GAAG,EAAE;QACzB;QACAjB,iBAAiB,CAACe,MAAM,CAACG,OAAO,IAAI,0BAA0B,CAAC;QAC/DpB,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM;QACH;QACAA,eAAe,CAACiB,MAAM,CAACG,OAAO,IAAI,wCAAwC,CAAC;QAC3ElB,iBAAiB,CAAC,EAAE,CAAC;MACzB;IACJ,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACZrB,eAAe,CAAC,oDAAoD,CAAC;MACrEE,iBAAiB,CAAC,EAAE,CAAC;IACzB;EACJ,CAAC;EAED,oBACIhB,OAAA,CAAAE,SAAA;IAAAkC,QAAA,gBACIpC,OAAA;MAAIqC,SAAS,EAAC,eAAe;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDzC,OAAA;MAAKqC,SAAS,EAAC,oBAAoB;MAAAD,QAAA,eAC/BpC,OAAA;QAAM0C,QAAQ,EAAEtB,YAAa;QAACiB,SAAS,EAAC,eAAe;QAAAD,QAAA,gBACnDpC,OAAA;UAAKqC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBpC,OAAA;YAAO2C,OAAO,EAAC,UAAU;YAAAP,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3CzC,OAAA;YACI4C,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,UAAU;YACbC,KAAK,EAAEzC,QAAS;YAChB0C,QAAQ,EAAG1B,CAAC,IAAKf,WAAW,CAACe,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;YAC7CG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNzC,OAAA;UAAKqC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBpC,OAAA;YAAO2C,OAAO,EAAC,UAAU;YAAAP,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3CzC,OAAA;YACI4C,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,UAAU;YACbC,KAAK,EAAEvC,QAAS;YAChBwC,QAAQ,EAAG1B,CAAC,IAAKb,WAAW,CAACa,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;YAC7CG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNzC,OAAA;UAAKqC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBpC,OAAA;YAAO2C,OAAO,EAAC,OAAO;YAAAP,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxCzC,OAAA;YACI4C,IAAI,EAAC,OAAO;YACZC,EAAE,EAAC,OAAO;YACVC,KAAK,EAAEnC,KAAM;YACboC,QAAQ,EAAG1B,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;YAC1CG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNzC,OAAA;UAAKqC,SAAS,EAAC,YAAY;UAAAD,QAAA,gBACvBpC,OAAA;YAAO2C,OAAO,EAAC,iBAAiB;YAAAP,QAAA,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1DzC,OAAA;YACI4C,IAAI,EAAC,UAAU;YACfC,EAAE,EAAC,iBAAiB;YACpBC,KAAK,EAAErC,eAAgB;YACvBsC,QAAQ,EAAG1B,CAAC,IAAKX,kBAAkB,CAACW,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;YACpDG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNzC,OAAA;UAAQ4C,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAClE5B,YAAY,iBAAIb,OAAA;UAAGqC,SAAS,EAAC,eAAe;UAAAD,QAAA,EAAEvB;QAAY;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC/D1B,cAAc,iBAAIf,OAAA;UAAGqC,SAAS,EAAC,iBAAiB;UAAAD,QAAA,EAAErB;QAAc;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAACrC,EAAA,CAlHID,QAAQ;AAAA+C,EAAA,GAAR/C,QAAQ;AAoHd,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}