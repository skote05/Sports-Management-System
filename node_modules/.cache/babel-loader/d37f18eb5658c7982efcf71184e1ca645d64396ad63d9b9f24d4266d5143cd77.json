{"ast":null,"code":"var _jsxFileName = \"/Users/shashankkote/Desktop2/Working/src/Administrator/PlayerDetailsUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerDetailsUpdate = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayerId, setSelectedPlayerId] = useState('');\n  const [playerDetails, setPlayerDetails] = useState({\n    Player_Name: '',\n    Position: '',\n    Profile_Picture: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Fetch incomplete players (those whose Position is missing or empty)\n  useEffect(() => {\n    const fetchIncompletePlayers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/player/incomplete');\n        if (response.status === 200) {\n          setPlayers(response.data); // Populate the dropdown\n        }\n      } catch (error) {\n        setErrorMessage('Error fetching players with incomplete details.');\n      }\n    };\n    fetchIncompletePlayers();\n  }, []);\n\n  // Fetch selected player's details when a player is selected\n  useEffect(() => {\n    if (selectedPlayerId) {\n      const fetchPlayerDetails = async () => {\n        try {\n          const response = await axios.get(`http://localhost:5001/api/player/${selectedPlayerId}`);\n          setPlayerDetails(response.data);\n          setErrorMessage('');\n        } catch (error) {\n          setErrorMessage('Error fetching player details.');\n        }\n      };\n      fetchPlayerDetails();\n    }\n  }, [selectedPlayerId]);\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPlayerDetails(prevDetails => ({\n      ...prevDetails,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://localhost:5001/api/player/update/${selectedPlayerId}`, playerDetails);\n      if (response.status === 200) {\n        setSuccessMessage('Player details updated successfully.');\n        setErrorMessage('');\n      }\n    } catch (error) {\n      setErrorMessage('Error updating player details.');\n      setSuccessMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Player Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 30\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"playerSelect\",\n        children: \"Select Player: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"playerSelect\",\n        value: selectedPlayerId,\n        onChange: e => setSelectedPlayerId(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Player --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), players.map(player => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: player.Player_ID,\n          children: player.Player_Name\n        }, player.Player_ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), selectedPlayerId && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Player_Name\",\n          placeholder: \"Player Name\",\n          value: playerDetails.Player_Name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Position\",\n          placeholder: \"Position\",\n          value: playerDetails.Position,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Profile_Picture\",\n          placeholder: \"Profile Picture URL\",\n          value: playerDetails.Profile_Picture,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerDetailsUpdate, \"+33wtDrFZOS5GQWGryZ0NxlFW6s=\");\n_c = PlayerDetailsUpdate;\nexport default PlayerDetailsUpdate;\nvar _c;\n$RefreshReg$(_c, \"PlayerDetailsUpdate\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerDetailsUpdate","_s","players","setPlayers","selectedPlayerId","setSelectedPlayerId","playerDetails","setPlayerDetails","Player_Name","Position","Profile_Picture","errorMessage","setErrorMessage","successMessage","setSuccessMessage","fetchIncompletePlayers","response","get","status","data","error","fetchPlayerDetails","handleChange","e","name","value","target","prevDetails","handleSubmit","preventDefault","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","map","player","Player_ID","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/shashankkote/Desktop2/Working/src/Administrator/PlayerDetailsUpdate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst PlayerDetailsUpdate = () => {\n    const [players, setPlayers] = useState([]);\n    const [selectedPlayerId, setSelectedPlayerId] = useState('');\n    const [playerDetails, setPlayerDetails] = useState({\n        Player_Name: '',\n        Position: '',\n        Profile_Picture: '',\n    });\n\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    // Fetch incomplete players (those whose Position is missing or empty)\n    useEffect(() => {\n        const fetchIncompletePlayers = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/api/player/incomplete');\n                if (response.status === 200) {\n                    setPlayers(response.data); // Populate the dropdown\n                }\n            } catch (error) {\n                setErrorMessage('Error fetching players with incomplete details.');\n            }\n        };\n        fetchIncompletePlayers();\n    }, []);\n\n    // Fetch selected player's details when a player is selected\n    useEffect(() => {\n        if (selectedPlayerId) {\n            const fetchPlayerDetails = async () => {\n                try {\n                    const response = await axios.get(`http://localhost:5001/api/player/${selectedPlayerId}`);\n                    setPlayerDetails(response.data);\n                    setErrorMessage('');\n                } catch (error) {\n                    setErrorMessage('Error fetching player details.');\n                }\n            };\n            fetchPlayerDetails();\n        }\n    }, [selectedPlayerId]);\n\n    // Handle input changes\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setPlayerDetails((prevDetails) => ({\n            ...prevDetails,\n            [name]: value,\n        }));\n    };\n\n    // Handle form submission\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.put(`http://localhost:5001/api/player/update/${selectedPlayerId}`, playerDetails);\n            if (response.status === 200) {\n                setSuccessMessage('Player details updated successfully.');\n                setErrorMessage('');\n            }\n        } catch (error) {\n            setErrorMessage('Error updating player details.');\n            setSuccessMessage('');\n        }\n    };\n\n    return (\n        <div className=\"update-container\">\n            <h2>Update Player Details</h2>\n\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\n\n            {/* Dropdown for selecting players */}\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"playerSelect\">Select Player: </label>\n                <select\n                    id=\"playerSelect\"\n                    value={selectedPlayerId}\n                    onChange={(e) => setSelectedPlayerId(e.target.value)}\n                    required\n                >\n                    <option value=\"\">-- Select Player --</option>\n                    {players.map((player) => (\n                        <option key={player.Player_ID} value={player.Player_ID}>\n                            {player.Player_Name}\n                        </option>\n                    ))}\n                </select>\n                \n                {/* Display and edit player details once selected */}\n                {selectedPlayerId && (\n                    <>\n                        <input\n                            type=\"text\"\n                            name=\"Player_Name\"\n                            placeholder=\"Player Name\"\n                            value={playerDetails.Player_Name}\n                            onChange={handleChange}\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"Position\"\n                            placeholder=\"Position\"\n                            value={playerDetails.Position}\n                            onChange={handleChange}\n                            required\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"Profile_Picture\"\n                            placeholder=\"Profile Picture URL\"\n                            value={playerDetails.Profile_Picture}\n                            onChange={handleChange}\n                        />\n                        <button type=\"submit\">Update Details</button>\n                    </>\n                )}\n            </form>\n        </div>\n    );\n};\n\nexport default PlayerDetailsUpdate;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC;IAC/Ce,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACrB,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMqB,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,6CAA6C,CAAC;QAC/E,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UACzBf,UAAU,CAACa,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;QAC/B;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZR,eAAe,CAAC,iDAAiD,CAAC;MACtE;IACJ,CAAC;IACDG,sBAAsB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACArB,SAAS,CAAC,MAAM;IACZ,IAAIU,gBAAgB,EAAE;MAClB,MAAMiB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;QACnC,IAAI;UACA,MAAML,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,oCAAoCb,gBAAgB,EAAE,CAAC;UACxFG,gBAAgB,CAACS,QAAQ,CAACG,IAAI,CAAC;UAC/BP,eAAe,CAAC,EAAE,CAAC;QACvB,CAAC,CAAC,OAAOQ,KAAK,EAAE;UACZR,eAAe,CAAC,gCAAgC,CAAC;QACrD;MACJ,CAAC;MACDS,kBAAkB,CAAC,CAAC;IACxB;EACJ,CAAC,EAAE,CAACjB,gBAAgB,CAAC,CAAC;;EAEtB;EACA,MAAMkB,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCnB,gBAAgB,CAAEoB,WAAW,KAAM;MAC/B,GAAGA,WAAW;MACd,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAC9BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMb,QAAQ,GAAG,MAAMrB,KAAK,CAACmC,GAAG,CAAC,2CAA2C1B,gBAAgB,EAAE,EAAEE,aAAa,CAAC;MAC9G,IAAIU,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QACzBJ,iBAAiB,CAAC,sCAAsC,CAAC;QACzDF,eAAe,CAAC,EAAE,CAAC;MACvB;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZR,eAAe,CAAC,gCAAgC,CAAC;MACjDE,iBAAiB,CAAC,EAAE,CAAC;IACzB;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAKkC,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BnC,OAAA;MAAAmC,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE7BzB,YAAY,iBAAId,OAAA;MAAGkC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAErB;IAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/DvB,cAAc,iBAAIhB,OAAA;MAAGkC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEnB;IAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtEvC,OAAA;MAAMwC,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBACzBnC,OAAA;QAAOyC,OAAO,EAAC,cAAc;QAAAN,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrDvC,OAAA;QACI0C,EAAE,EAAC,cAAc;QACjBd,KAAK,EAAErB,gBAAiB;QACxBoC,QAAQ,EAAGjB,CAAC,IAAKlB,mBAAmB,CAACkB,CAAC,CAACG,MAAM,CAACD,KAAK,CAAE;QACrDgB,QAAQ;QAAAT,QAAA,gBAERnC,OAAA;UAAQ4B,KAAK,EAAC,EAAE;UAAAO,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC5ClC,OAAO,CAACwC,GAAG,CAAEC,MAAM,iBAChB9C,OAAA;UAA+B4B,KAAK,EAAEkB,MAAM,CAACC,SAAU;UAAAZ,QAAA,EAClDW,MAAM,CAACnC;QAAW,GADVmC,MAAM,CAACC,SAAS;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAErB,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAGRhC,gBAAgB,iBACbP,OAAA,CAAAE,SAAA;QAAAiC,QAAA,gBACInC,OAAA;UACIgD,IAAI,EAAC,MAAM;UACXrB,IAAI,EAAC,aAAa;UAClBsB,WAAW,EAAC,aAAa;UACzBrB,KAAK,EAAEnB,aAAa,CAACE,WAAY;UACjCgC,QAAQ,EAAElB,YAAa;UACvBmB,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACFvC,OAAA;UACIgD,IAAI,EAAC,MAAM;UACXrB,IAAI,EAAC,UAAU;UACfsB,WAAW,EAAC,UAAU;UACtBrB,KAAK,EAAEnB,aAAa,CAACG,QAAS;UAC9B+B,QAAQ,EAAElB,YAAa;UACvBmB,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACFvC,OAAA;UACIgD,IAAI,EAAC,MAAM;UACXrB,IAAI,EAAC,iBAAiB;UACtBsB,WAAW,EAAC,qBAAqB;UACjCrB,KAAK,EAAEnB,aAAa,CAACI,eAAgB;UACrC8B,QAAQ,EAAElB;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eACFvC,OAAA;UAAQgD,IAAI,EAAC,QAAQ;UAAAb,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAC/C,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACnC,EAAA,CA3HID,mBAAmB;AAAA+C,EAAA,GAAnB/C,mBAAmB;AA6HzB,eAAeA,mBAAmB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}