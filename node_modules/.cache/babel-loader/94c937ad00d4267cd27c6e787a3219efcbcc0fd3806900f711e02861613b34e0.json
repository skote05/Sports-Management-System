{"ast":null,"code":"var _jsxFileName = \"/Users/shashankkote/Working/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Login.css'; // Assuming you have some basic styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [role, setRole] = useState(''); // 'player' or 'admin'\n\n  // Handle login for player or admin\n  const handleLogin = async e => {\n    e.preventDefault();\n    if (!username || !password || !role) {\n      setErrorMessage('Please fill in all fields.');\n      return;\n    }\n    const loginData = {\n      username,\n      password,\n      accountType: role\n    };\n    try {\n      const response = await fetch('http://localhost:5001/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData)\n      });\n      const result = await response.json();\n      if (response.status === 200) {\n        // Log the result to check the response\n        console.log(\"Login response:\", result);\n\n        // Store playerId (from the response) in localStorage\n        localStorage.setItem('playerId', result.playerId); // Store the correct playerId\n        localStorage.setItem('username', result.user.Username); // Optionally store username\n\n        // Redirect based on account type\n        if (role === 'player') {\n          window.location.href = '/playerdashboard';\n        } else if (role === 'admin') {\n          window.location.href = '/admindashboard';\n        }\n      } else {\n        setErrorMessage(result.message); // Show error if login fails\n      }\n    } catch (error) {\n      setErrorMessage('Error during login. Please try again.');\n    }\n  };\n\n  // Set role to either 'player' or 'admin'\n  const handleRoleSelection = role => {\n    setRole(role);\n    setErrorMessage(''); // Clear error message when switching role\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-heading\",\n      children: \"Welcome to the Sports Management System!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-box\",\n        children: [!role && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"role-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoleSelection('player'),\n            className: \"btn btn-secondary\",\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoleSelection('admin'),\n            className: \"btn btn-secondary\",\n            children: \"Administrator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), role && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"login-title\",\n            children: role === 'player' ? 'Player Login' : 'Administrator Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLogin,\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"username\",\n                children: \"Username:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"username\",\n                name: \"username\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                name: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true,\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: [\"Login as \", role.charAt(0).toUpperCase() + role.slice(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), role === 'player' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-link\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/register\",\n                className: \"register-text\",\n                children: \"Register here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"MaR5LlmgA3XqVLPqUkSk6qqseCk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","role","setRole","handleLogin","e","preventDefault","loginData","accountType","response","fetch","method","headers","body","JSON","stringify","result","json","status","console","log","localStorage","setItem","playerId","user","Username","window","location","href","message","error","handleRoleSelection","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","name","value","onChange","target","required","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["/Users/shashankkote/Working/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css'; // Assuming you have some basic styling\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [role, setRole] = useState(''); // 'player' or 'admin'\r\n\r\n    // Handle login for player or admin\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!username || !password || !role) {\r\n            setErrorMessage('Please fill in all fields.');\r\n            return;\r\n        }\r\n        \r\n        const loginData = {\r\n            username,\r\n            password,\r\n            accountType: role,\r\n        };\r\n        \r\n        try {\r\n            const response = await fetch('http://localhost:5001/api/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(loginData),\r\n            });\r\n            \r\n            const result = await response.json();\r\n            \r\n            if (response.status === 200) {\r\n                // Log the result to check the response\r\n                console.log(\"Login response:\", result);\r\n    \r\n                // Store playerId (from the response) in localStorage\r\n                localStorage.setItem('playerId', result.playerId); // Store the correct playerId\r\n                localStorage.setItem('username', result.user.Username); // Optionally store username\r\n    \r\n                // Redirect based on account type\r\n                if (role === 'player') {\r\n                    window.location.href = '/playerdashboard';\r\n                } else if (role === 'admin') {\r\n                    window.location.href = '/admindashboard';\r\n                }\r\n            } else {\r\n                setErrorMessage(result.message); // Show error if login fails\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage('Error during login. Please try again.');\r\n        }\r\n    };\r\n    \r\n    \r\n\r\n    // Set role to either 'player' or 'admin'\r\n    const handleRoleSelection = (role) => {\r\n        setRole(role);\r\n        setErrorMessage('');  // Clear error message when switching role\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"login-heading\">Welcome to the Sports Management System!</h1>\r\n            <div className=\"login-container\">\r\n                <div className=\"login-box\">\r\n                    {/* Role Selection Buttons */}\r\n                    {!role && (\r\n                        <div className=\"role-buttons\">\r\n                            <button onClick={() => handleRoleSelection('player')} className=\"btn btn-secondary\">\r\n                                Player\r\n                            </button>\r\n                            <button onClick={() => handleRoleSelection('admin')} className=\"btn btn-secondary\">\r\n                                Administrator\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Login Form */}\r\n                    {role && (\r\n                        <div className=\"login-form-container\">\r\n                            <h2 className=\"login-title\">{role === 'player' ? 'Player Login' : 'Administrator Login'}</h2>\r\n                            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n                            <form onSubmit={handleLogin} className=\"login-form\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"username\">Username:</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"username\"\r\n                                        name=\"username\"\r\n                                        value={username}\r\n                                        onChange={(e) => setUsername(e.target.value)}\r\n                                        required\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password:</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        required\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">\r\n                                    Login as {role.charAt(0).toUpperCase() + role.slice(1)}\r\n                                </button>\r\n                            </form>\r\n\r\n                            {/* Register Link only visible for Player login */}\r\n                            {role === 'player' && (\r\n                                <div className=\"register-link\">\r\n                                    <p>\r\n                                        Don't have an account? <a href=\"/register\" className=\"register-text\">Register here</a>\r\n                                    </p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}